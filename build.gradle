plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.6'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'checkstyle'
    id 'pmd'
    id 'jacoco'
    id 'org.liquibase.gradle' version '2.0.4'
   }

repositories {
    mavenCentral()
}

ext {
    mapstructVersion = "1.5.5.Final"
}

group = 'com.fintech'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }

}

checkstyle {
    toolVersion '10.3.3'
    configFile file("config/checkstyle/checkstyle.xml")
}

pmd {
    ruleSetConfig = resources.text.fromFile("config/pmd/pmd.xml")
    sourceSets = [sourceSets.main]
    ignoreFailures = false
}

jacoco {
    toolVersion = "0.8.8"
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation "org.mapstruct:mapstruct:${mapstructVersion}"
    implementation 'org.springframework.boot:spring-boot-starter-logging'
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
    annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'
    liquibaseRuntime 'org.liquibase:liquibase-core:4.20.0'
    liquibaseRuntime 'org.liquibase:liquibase-groovy-dsl:3.0.3'
    liquibaseRuntime 'mysql:mysql-connector-java:8.0.33'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.mysql:mysql-connector-j'
    testImplementation 'org.springframework:spring-test'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.mockito:mockito-core'
    testImplementation 'org.junit.jupiter:junit-jupiter-api'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation "org.testcontainers:testcontainers:1.18.3"
    testImplementation 'org.testcontainers:junit-jupiter:1.18.3'
    testImplementation 'org.testcontainers:mysql:1.18.3'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'


}

test {
    finalizedBy jacocoTestReport // report is always generated after tests run
}

jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
    reports {
        xml.required = false
        csv.required = false
        html.destination file("${buildDir}/jacocoHtml")
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.withType(Checkstyle) {
    reports {
        xml.enabled false
        html.enabled true
        html.stylesheet resources.text.fromFile('config/xsl/checkstyle-custom.xsl')
    }
}